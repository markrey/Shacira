
# makefile generated by abuild
# on Sun Mar 18 14:49:14 2007
# based on build file E:/usr/prj/Shacira/Targ/AutoConfig/pp/build.cfg

# additional configuration dependent make code
make = make
rm = rm
mkdir = mkdir
cp = cp
rmdir = rm -rf

# include project dependency file
-include mingw.dep

# intermediate directory
# the directory where all targets will be generated
intermediate_dir = mingw

# additional names
project_name = pp
target_name = pp

# options passed to toolchain
c_options = -g
link_options =
lib_options = 

# definitions passed to toolchain
definitions = 

# library list used by the project (recursive)
libraries =

# include search directories used by the project (recursive)
include_dirs = \
-I "mingw" \
-I "../../Tools/gnu/mingw/include" \

# library search directories used by the project (recursive)
library_dirs =

# target file list of the project
targets = \
mingw/pp.o \
mingw/pp.exe

# object file list of the project
objects = \
mingw/pp.o

# build of dependent projects
dependencies:

# target specifications
all: mingw dependencies $(targets)

# intermediate directory generation
mingw:
	 $(mkdir) mingw

# clean specification
clean:
	-$(rm) mingw/pp.o
	-$(rm) mingw/pp.exe
	-$(rm) ../../Tools/mingw/pp.exe

cleanall:
#	$(make) -fpp.mingw clean
	-$(rmdir) mingw

# make rules for every target file
mingw/pp.o: ../../../Src/Tools/pp/pp.cpp
	g++ -enable-exceptions -mno-cygwin -Wno-deprecated -c $(c_options) $(definitions) -I. $(include_dirs) $< -o$@

mingw/pp.exe: pp.mingw $(objects)
	g++ -o$@ $(objects) $(library_dirs) $(libraries) -mthreads -Wl,--enable-runtime-pseudo-reloc -Wl,--allow-multiple-definition
	$(cp) $@ ../../Tools/mingw
