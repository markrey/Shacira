/* ------------------------------------------------------------------------ */
/*                                                                          */
/* [Shac_int.c]               Language Interface                            */
/*                                                                          */
/* ------------------------------------------------------------------------ */

/* File generated by 'ctoh'. Don't change manually. */

#ifndef shac_int_INCL
#define shac_int_INCL


#include "ptm.h"
#include "gls.h"


#ifdef __cplusplus
extern "C" {
#endif


/* --------------------- symbol objects - init & quit --------------------- */

void Shac_initSymbols();               /*                                   */
void Shac_quitSymbols();               /*                                   */

/* -------------------------- Types & Constants --------------------------- */

AbstractType( Shacira );

AbstractType( ShacDefinitions );
AbstractType( ShacSymbol );
AbstractType( ShacDefinition );
AbstractType( ShacDatabaseDef );
AbstractType( ShacDeviceSpec );
AbstractType( ShacFuncDecl );
AbstractType( ShacFuncRef );
AbstractType( ShacVarRef );
AbstractType( ShacVarDef );
AbstractType( ShacDimSpec );
AbstractType( ShacVarSpecSeq );
AbstractType( ShacDescription );
AbstractType( ShacText );
AbstractType( ShacDim1 );
AbstractType( ShacDim2 );
AbstractType( ShacDim3 );
AbstractType( ShacDim4 );
AbstractType( ShacFlags );
AbstractType( ShacFlagValue );
AbstractType( ShacVarTypeSpec );
AbstractType( ShacPersistence );
AbstractType( ShacFile );
AbstractType( ShacFilterFunc );
AbstractType( ShacMinSpec );
AbstractType( ShacMaxSpec );
AbstractType( ShacValueSpec );
AbstractType( ShacValue );
AbstractType( ShacBcd  );
AbstractType( ShacCmpr );
AbstractType( ShacPersistenceType );
AbstractType( ShacRefreshType );
AbstractType( ShacVarType );
AbstractType( ShacEventType );
AbstractType( ShacMapDef );
AbstractType( ShacItemSpec );
AbstractType( ShacItemSpecifier );
AbstractType( ShacRefresh );
AbstractType( ShacConvFunc );
AbstractType( ShacArgDecl );
AbstractType( ShacDataTypeSpec );
AbstractType( ShacMapTypeSpec );
AbstractType( ShacBaseType );
AbstractType( ShacStringType );
AbstractType( ShacIndexRef );
AbstractType( ShacArgument );
AbstractType( ShacState );
AbstractType( ShacProcedure );
AbstractType( ShacProgram );
AbstractType( ShacStartCondition );
AbstractType( ShacStatement );
AbstractType( ShacStatementBlock );
AbstractType( ShacCondition );
AbstractType( ShacAtomicCondition );
AbstractType( ShacRelOp );
AbstractType( ShacStep );
AbstractType( ShacStepCommands );
AbstractType( ShacParamAssignment );
AbstractType( ShacInitial );
AbstractType( ShacCyclic );
AbstractType( ShacFinal );
AbstractType( ShacTerminate );
AbstractType( ShacNext );

/* --------------------------- Access to Tokens --------------------------- */

c_bool TShac_Hex(GLS_Tok x);           /*                                   */
c_bool TShac_Ide(GLS_Tok x);           /*                                   */
c_bool TShac_Real(GLS_Tok x);          /*                                   */
c_bool TShac_Nat(GLS_Tok x);           /*                                   */
c_bool TShac_Seq(GLS_Tok x);           /*                                   */
c_bool TShac_HexSeq(GLS_Tok x);        /*                                   */
c_bool TShac_Param(GLS_Tok x);         /*                                   */

/* --------------------------- Access to Terms ---------------------------- */

c_bool Shac_Shacira(PT_Term x, Shacira* x1);                     /*         */
c_bool Shac_Definitions(PT_Term x, ShacDefinitions* x1);         /*         */
c_bool Shac_Symbol(PT_Term x, ShacSymbol* x1);                   /*         */
c_bool Shac_Definition(PT_Term x, ShacDefinition* x1);           /*         */
c_bool Shac_DatabaseDef(PT_Term x, ShacDatabaseDef* x1);         /*         */
c_bool Shac_DeviceSpec(PT_Term x, ShacDeviceSpec* x1);           /*         */
c_bool Shac_FuncDecl(PT_Term x, ShacFuncDecl* x1);               /*         */
c_bool Shac_FuncRef(PT_Term x, ShacFuncRef* x1);                 /*         */
c_bool Shac_VarRef(PT_Term x, ShacVarRef* x1);                   /*         */
c_bool Shac_VarDef(PT_Term x, ShacVarDef* x1);                   /*         */
c_bool Shac_DimSpec(PT_Term x, ShacDimSpec* x1);                 /*         */
c_bool Shac_VarSpecSeq(PT_Term x, ShacVarSpecSeq* x1);           /*         */
c_bool Shac_Description(PT_Term x, ShacDescription* x1);         /*         */
c_bool Shac_Text(PT_Term x, ShacText* x1);                       /*         */
c_bool Shac_Dim1(PT_Term x, ShacDim1* x1);                       /*         */
c_bool Shac_Dim2(PT_Term x, ShacDim2* x1);                       /*         */
c_bool Shac_Dim3(PT_Term x, ShacDim3* x1);                       /*         */
c_bool Shac_Dim4(PT_Term x, ShacDim4* x1);                       /*         */
c_bool Shac_Flags(PT_Term x, ShacFlags* x1);                     /*         */
c_bool Shac_FlagValue(PT_Term x, ShacFlagValue* x1);             /*         */
c_bool Shac_VarTypeSpec(PT_Term x, ShacVarTypeSpec* x1);         /*         */
c_bool Shac_Persistence(PT_Term x, ShacPersistence* x1);         /*         */
c_bool Shac_File(PT_Term x, ShacFile* x1);                       /*         */
c_bool Shac_FilterFunc(PT_Term x, ShacFilterFunc* x1);           /*         */
c_bool Shac_MinSpec(PT_Term x, ShacMinSpec* x1);                 /*         */
c_bool Shac_MaxSpec(PT_Term x, ShacMaxSpec* x1);                 /*         */
c_bool Shac_ValueSpec(PT_Term x, ShacValueSpec* x1);             /*         */
c_bool Shac_Value(PT_Term x, ShacValue* x1);                     /*         */
c_bool Shac_Bcd(PT_Term x, ShacBcd* x1);                         /*         */
c_bool Shac_Cmpr(PT_Term x, ShacCmpr* x1);                       /*         */
c_bool Shac_PersistenceType(PT_Term x, ShacPersistenceType* x1); /*         */
c_bool Shac_RefreshType(PT_Term x, ShacRefreshType* x1);         /*         */
c_bool Shac_VarType(PT_Term x, ShacVarType* x1);                 /*         */
c_bool Shac_EventType(PT_Term x, ShacEventType* x1);             /*         */
c_bool Shac_MapDef(PT_Term x, ShacMapDef* x1);                   /*         */
c_bool Shac_ItemSpec(PT_Term x, ShacItemSpec* x1);               /*         */
c_bool Shac_ItemSpecifier(PT_Term x, ShacItemSpecifier* x1);     /*         */
c_bool Shac_Refresh(PT_Term x, ShacRefresh* x1);                 /*         */
c_bool Shac_ConvFunc(PT_Term x, ShacConvFunc* x1);               /*         */
c_bool Shac_ArgDecl(PT_Term x, ShacArgDecl* x1);                 /*         */
c_bool Shac_DataTypeSpec(PT_Term x, ShacDataTypeSpec* x1);       /*         */
c_bool Shac_MapTypeSpec(PT_Term x, ShacMapTypeSpec* x1);         /*         */
c_bool Shac_BaseType(PT_Term x, ShacBaseType* x1);               /*         */
c_bool Shac_StringType(PT_Term x, ShacStringType* x1);           /*         */
c_bool Shac_IndexRef(PT_Term x, ShacIndexRef* x1);               /*         */
c_bool Shac_Argument(PT_Term x, ShacArgument* x1);               /*         */
c_bool Shac_State(PT_Term x, ShacState* x1);                     /*         */
c_bool Shac_Procedure(PT_Term x, ShacProcedure* x1);             /*         */
c_bool Shac_Program(PT_Term x, ShacProgram* x1);                 /*         */
c_bool Shac_StartCondition(PT_Term x, ShacStartCondition* x1);   /*         */
c_bool Shac_Statement(PT_Term x, ShacStatement* x1);             /*         */
c_bool Shac_StatementBlock(PT_Term x, ShacStatementBlock* x1);   /*         */
c_bool Shac_Condition(PT_Term x, ShacCondition* x1);             /*         */
c_bool Shac_AtomicCondition(PT_Term x, ShacAtomicCondition* x1); /*         */
c_bool Shac_RelOp(PT_Term x, ShacRelOp* x1);                     /*         */
c_bool Shac_Step(PT_Term x, ShacStep* x1);                       /*         */
c_bool Shac_StepCommands(PT_Term x, ShacStepCommands* x1);       /*         */
c_bool Shac_ParamAssignment(PT_Term x, ShacParamAssignment* x1); /*         */
c_bool Shac_Initial(PT_Term x, ShacInitial* x1);                 /*         */
c_bool Shac_Cyclic(PT_Term x, ShacCyclic* x1);                   /*         */
c_bool Shac_Final(PT_Term x, ShacFinal* x1);                     /*         */
c_bool Shac_Terminate(PT_Term x, ShacTerminate* x1);             /*         */
c_bool Shac_Next(PT_Term x, ShacNext* x1);                       /*         */

/* ------------------------------- Shacira -------------------------------- */

c_bool Shacira_Start_Definitions(Shacira x, ShacDefinitions* x1)
#define Shacira_Start_0   Shacira_Start_Definitions
;


/* ----------------------------- Definitions ------------------------------ */

c_bool ShacDefinitions_non(ShacDefinitions x); /*                           */
c_bool ShacDefinitions_defs(ShacDefinitions x, GLS_Lst(ShacDefinition)* x1);    /*  */

/* -------------------------------- Symbol -------------------------------- */

c_bool ShacSymbol_hex(ShacSymbol x, GLS_Tok* x1); /*                        */
c_bool ShacSymbol_ide(ShacSymbol x, GLS_Tok* x1); /*                        */
c_bool ShacSymbol_dec(ShacSymbol x, GLS_Tok* x1); /*                        */

/* ------------------------------ Definition ------------------------------ */

c_bool ShacDefinition_proc(ShacDefinition x, ShacProcedure* x1);      /*    */
c_bool ShacDefinition_vardef(ShacDefinition x, ShacVarDef* x1);       /*    */
c_bool ShacDefinition_funcdec(ShacDefinition x, ShacFuncDecl* x1);    /*    */
c_bool ShacDefinition_funcref(ShacDefinition x, ShacFuncRef* x1);     /*    */
c_bool ShacDefinition_prog(ShacDefinition x, ShacProgram* x1);        /*    */
c_bool ShacDefinition_dbdef(ShacDefinition x, ShacDatabaseDef* x1);   /*    */
c_bool ShacDefinition_varref(ShacDefinition x, ShacVarRef* x1);       /*    */
c_bool ShacDefinition_cond(ShacDefinition x, ShacStartCondition* x1); /*    */
c_bool ShacDefinition_state(ShacDefinition x, ShacState* x1);         /*    */

/* ----------------------------- DatabaseDef ------------------------------ */

c_bool ShacDatabaseDef_def(ShacDatabaseDef x, GLS_Tok* x1, ShacDeviceSpec* x2,
                           GLS_Lst(ShacVarDef)* x3)
;


/* ------------------------------ DeviceSpec ------------------------------ */

c_bool ShacDeviceSpec_nul(ShacDeviceSpec x);               /*               */
c_bool ShacDeviceSpec_spec(ShacDeviceSpec x, GLS_Tok* x1); /*               */

/* ------------------------------- FuncDecl ------------------------------- */

c_bool ShacFuncDecl_dark(ShacFuncDecl x, GLS_Tok* x1, GLS_Lst(ShacArgDecl)* x2);        /*  */

c_bool ShacFuncDecl_lim2(ShacFuncDecl x, ShacStringType* x1, GLS_Tok* x2,
                         GLS_Lst(ShacArgDecl)* x3)
;

c_bool ShacFuncDecl_filt2(ShacFuncDecl x, ShacStringType* x1, GLS_Tok* x2,
                          GLS_Lst(ShacArgDecl)* x3)
;

c_bool ShacFuncDecl_user(ShacFuncDecl x, GLS_Tok* x1, GLS_Lst(ShacArgDecl)* x2);        /*  */

c_bool ShacFuncDecl_view1(ShacFuncDecl x, ShacBaseType* x1, GLS_Tok* x2,
                          GLS_Lst(ShacArgDecl)* x3)
;

c_bool ShacFuncDecl_filt1(ShacFuncDecl x, ShacBaseType* x1, GLS_Tok* x2,
                          GLS_Lst(ShacArgDecl)* x3)
;

c_bool ShacFuncDecl_lim1(ShacFuncDecl x, ShacBaseType* x1, GLS_Tok* x2,
                         GLS_Lst(ShacArgDecl)* x3)
;

c_bool ShacFuncDecl_plaus(ShacFuncDecl x, GLS_Tok* x1, GLS_Lst(ShacArgDecl)* x2);         /*  */

c_bool ShacFuncDecl_emb1(ShacFuncDecl x, ShacBaseType* x1, GLS_Tok* x2,
                         GLS_Lst(ShacArgDecl)* x3)
;

c_bool ShacFuncDecl_valf(ShacFuncDecl x, GLS_Tok* x1, GLS_Lst(ShacArgDecl)* x2);        /*  */

c_bool ShacFuncDecl_conv1(ShacFuncDecl x, ShacBaseType* x1, GLS_Tok* x2,
                          GLS_Lst(ShacArgDecl)* x3)
;

c_bool ShacFuncDecl_sigflt(ShacFuncDecl x, GLS_Tok* x1, GLS_Lst(ShacArgDecl)* x2);          /*  */

c_bool ShacFuncDecl_free2(ShacFuncDecl x, ShacStringType* x1, GLS_Tok* x2,
                          GLS_Lst(ShacArgDecl)* x3)
;

c_bool ShacFuncDecl_conv2(ShacFuncDecl x, ShacStringType* x1, GLS_Tok* x2,
                          GLS_Lst(ShacArgDecl)* x3)
;

c_bool ShacFuncDecl_free1(ShacFuncDecl x, ShacBaseType* x1, GLS_Tok* x2,
                          GLS_Lst(ShacArgDecl)* x3)
;

c_bool ShacFuncDecl_slot(ShacFuncDecl x, GLS_Tok* x1, GLS_Lst(ShacArgDecl)* x2);        /*  */

c_bool ShacFuncDecl_emb2(ShacFuncDecl x, ShacStringType* x1, GLS_Tok* x2,
                         GLS_Lst(ShacArgDecl)* x3)
;

c_bool ShacFuncDecl_btn(ShacFuncDecl x, GLS_Tok* x1, GLS_Lst(ShacArgDecl)* x2);       /*  */

c_bool ShacFuncDecl_view2(ShacFuncDecl x, ShacStringType* x1, GLS_Tok* x2,
                          GLS_Lst(ShacArgDecl)* x3)
;


/* ------------------------------- FuncRef -------------------------------- */

c_bool ShacFuncRef_ref(ShacFuncRef x, GLS_Tok* x1, GLS_Lst(ShacArgument)* x2);      /*  */

/* -------------------------------- VarRef -------------------------------- */

c_bool ShacVarRef_ref(ShacVarRef x, GLS_Tok* x1, GLS_Lst(ShacIndexRef)* x2);    /*  */

/* -------------------------------- VarDef -------------------------------- */

c_bool ShacVarDef_def(ShacVarDef x, GLS_Tok* x1, GLS_Lst(ShacDimSpec)* x2,
                      ShacDataTypeSpec* x3, ShacVarSpecSeq* x4,
                      ShacMapDef* x5)
;


/* ------------------------------- DimSpec -------------------------------- */

c_bool ShacDimSpec_dimspec(ShacDimSpec x, GLS_Tok* x1); /*                  */

/* ------------------------------ VarSpecSeq ------------------------------ */

c_bool ShacVarSpecSeq_specs(ShacVarSpecSeq x, ShacVarTypeSpec* x1, ShacDescription* x2,
                            ShacText* x3, ShacDim1* x4,
                            ShacDim2* x5, ShacDim3* x6,
                            ShacDim4* x7, ShacFlags* x8,
                            ShacPersistence* x9, ShacFile* x10,
                            ShacFilterFunc* x11, ShacMinSpec* x12,
                            ShacMaxSpec* x13, ShacValueSpec* x14)
;


/* ----------------------------- Description ------------------------------ */

c_bool ShacDescription_desc(ShacDescription x, GLS_Tok* x1); /*             */
c_bool ShacDescription_nul(ShacDescription x);               /*             */

/* --------------------------------- Text --------------------------------- */

c_bool ShacText_text(ShacText x, GLS_Tok* x1); /*                           */
c_bool ShacText_nul(ShacText x);               /*                           */

/* --------------------------------- Dim1 --------------------------------- */

c_bool ShacDim1_text(ShacDim1 x, GLS_Tok* x1); /*                           */
c_bool ShacDim1_nul(ShacDim1 x);               /*                           */

/* --------------------------------- Dim2 --------------------------------- */

c_bool ShacDim2_nul(ShacDim2 x);               /*                           */
c_bool ShacDim2_text(ShacDim2 x, GLS_Tok* x1); /*                           */

/* --------------------------------- Dim3 --------------------------------- */

c_bool ShacDim3_nul(ShacDim3 x);               /*                           */
c_bool ShacDim3_text(ShacDim3 x, GLS_Tok* x1); /*                           */

/* --------------------------------- Dim4 --------------------------------- */

c_bool ShacDim4_nul(ShacDim4 x);               /*                           */
c_bool ShacDim4_text(ShacDim4 x, GLS_Tok* x1); /*                           */

/* -------------------------------- Flags --------------------------------- */

c_bool ShacFlags_nul(ShacFlags x);                      /*                  */
c_bool ShacFlags_value(ShacFlags x, ShacFlagValue* x1); /*                  */

/* ------------------------------ FlagValue ------------------------------- */

c_bool ShacFlagValue_chex(ShacFlagValue x, GLS_Tok* x1); /*                 */
c_bool ShacFlagValue_cnat(ShacFlagValue x, GLS_Tok* x1); /*                 */

/* ----------------------------- VarTypeSpec ------------------------------ */

c_bool ShacVarTypeSpec_vartype(ShacVarTypeSpec x, ShacVarType* x1); /*      */
c_bool ShacVarTypeSpec_nul(ShacVarTypeSpec x);                      /*      */

/* ----------------------------- Persistence ------------------------------ */

c_bool ShacPersistence_persist(ShacPersistence x, ShacPersistenceType* x1);   /*  */
c_bool ShacPersistence_nul(ShacPersistence x); /*                           */

/* --------------------------------- File --------------------------------- */

c_bool ShacFile_file(ShacFile x, GLS_Tok* x1); /*                           */
c_bool ShacFile_nul(ShacFile x);               /*                           */

/* ------------------------------ FilterFunc ------------------------------ */

c_bool ShacFilterFunc_ref(ShacFilterFunc x, ShacFuncRef* x1); /*            */
c_bool ShacFilterFunc_nul(ShacFilterFunc x);                  /*            */

/* ------------------------------- MinSpec -------------------------------- */

c_bool ShacMinSpec_spec(ShacMinSpec x, ShacArgument* x1); /*                */
c_bool ShacMinSpec_nul(ShacMinSpec x);                    /*                */

/* ------------------------------- MaxSpec -------------------------------- */

c_bool ShacMaxSpec_spec(ShacMaxSpec x, ShacArgument* x1); /*                */
c_bool ShacMaxSpec_nul(ShacMaxSpec x);                    /*                */

/* ------------------------------ ValueSpec ------------------------------- */

c_bool ShacValueSpec_nul(ShacValueSpec x);                          /*      */
c_bool ShacValueSpec_spec(ShacValueSpec x, GLS_Lst(ShacValue)* x1); /*      */

/* -------------------------------- Value --------------------------------- */

c_bool ShacValue_str(ShacValue x, GLS_Tok* x1);   /*                        */
c_bool ShacValue_ide(ShacValue x, GLS_Tok* x1);   /*                        */
c_bool ShacValue_nat(ShacValue x, GLS_Tok* x1);   /*                        */
c_bool ShacValue_real(ShacValue x, GLS_Tok* x1);  /*                        */
c_bool ShacValue_cmpr(ShacValue x, ShacCmpr* x1); /*                        */
c_bool ShacValue_bcd(ShacValue x, ShacBcd* x1);   /*                        */
c_bool ShacValue_hex(ShacValue x, GLS_Tok* x1);   /*                        */

/* --------------------------------- Bcd ---------------------------------- */

c_bool ShacBcd_bcd(ShacBcd x, GLS_Tok* x1); /*                              */

/* --------------------------------- Cmpr --------------------------------- */

c_bool ShacCmpr_cmpr(ShacCmpr x, GLS_Tok* x1, ShacBcd* x2); /*              */

/* --------------------------- PersistenceType ---------------------------- */

c_bool ShacPersistenceType_bbram(ShacPersistenceType x);     /*             */
c_bool ShacPersistenceType_filebased(ShacPersistenceType x); /*             */
c_bool ShacPersistenceType_ram(ShacPersistenceType x);       /*             */

/* ----------------------------- RefreshType ------------------------------ */

c_bool ShacRefreshType_event1(ShacRefreshType x, ShacEventType* x1); /*     */
c_bool ShacRefreshType_event2(ShacRefreshType x, GLS_Tok* x1);       /*     */
c_bool ShacRefreshType_cyclic(ShacRefreshType x, GLS_Tok* x1);       /*     */

/* ------------------------------- VarType -------------------------------- */

c_bool ShacVarType_set(ShacVarType x);      /*                              */
c_bool ShacVarType_act(ShacVarType x);      /*                              */
c_bool ShacVarType_volatile(ShacVarType x); /*                              */

/* ------------------------------ EventType ------------------------------- */

c_bool ShacEventType_data(ShacEventType x);      /*                         */
c_bool ShacEventType_automatic(ShacEventType x); /*                         */
c_bool ShacEventType_cycle(ShacEventType x);     /*                         */

/* -------------------------------- MapDef -------------------------------- */

c_bool ShacMapDef_map2(ShacMapDef x, GLS_Tok* x1, ShacMapTypeSpec* x2,
                       GLS_Lst(ShacItemSpec)* x3, ShacRefresh* x4,
                       ShacConvFunc* x5)
;

c_bool ShacMapDef_nul(ShacMapDef x);   /*                                   */

c_bool ShacMapDef_map1(ShacMapDef x, GLS_Tok* x1, ShacMapTypeSpec* x2,
                       ShacItemSpec* x3, ShacRefresh* x4,
                       ShacConvFunc* x5)
;


/* ------------------------------- ItemSpec ------------------------------- */

c_bool ShacItemSpec_spec1(ShacItemSpec x, ShacItemSpecifier* x1); /*        */

c_bool ShacItemSpec_spec3(ShacItemSpec x, ShacItemSpecifier* x1, GLS_Tok* x2,
                          GLS_Tok* x3)
;

c_bool ShacItemSpec_spec2(ShacItemSpec x, ShacItemSpecifier* x1, GLS_Tok* x2);      /*  */

/* ---------------------------- ItemSpecifier ----------------------------- */

c_bool ShacItemSpecifier_name(ShacItemSpecifier x, GLS_Tok* x1);      /*    */
c_bool ShacItemSpecifier_symbol(ShacItemSpecifier x, ShacSymbol* x1); /*    */

/* ------------------------------- Refresh -------------------------------- */

c_bool ShacRefresh_refresh(ShacRefresh x, ShacRefreshType* x1); /*          */
c_bool ShacRefresh_nul(ShacRefresh x);                          /*          */

/* ------------------------------- ConvFunc ------------------------------- */

c_bool ShacConvFunc_conv(ShacConvFunc x, ShacFuncRef* x1); /*               */
c_bool ShacConvFunc_nul(ShacConvFunc x);                   /*               */

/* ------------------------------- ArgDecl -------------------------------- */

c_bool ShacArgDecl_argdec2(ShacArgDecl x, ShacStringType* x1, GLS_Tok* x2);   /*  */
c_bool ShacArgDecl_argdec1(ShacArgDecl x, ShacBaseType* x1, GLS_Tok* x2); /*  */

/* ----------------------------- DataTypeSpec ----------------------------- */

c_bool ShacDataTypeSpec_type2(ShacDataTypeSpec x, ShacBaseType* x1, GLS_Tok* x2);         /*  */
c_bool ShacDataTypeSpec_type3(ShacDataTypeSpec x, ShacStringType* x1, GLS_Tok* x2);           /*  */
c_bool ShacDataTypeSpec_type1(ShacDataTypeSpec x, ShacBaseType* x1); /*     */

/* ----------------------------- MapTypeSpec ------------------------------ */

c_bool ShacMapTypeSpec_type2(ShacMapTypeSpec x, ShacStringType* x1, GLS_Tok* x2);         /*  */
c_bool ShacMapTypeSpec_type1(ShacMapTypeSpec x, ShacBaseType* x1); /*       */

/* ------------------------------- BaseType ------------------------------- */

c_bool ShacBaseType_double(ShacBaseType x); /*                              */
c_bool ShacBaseType_bit32(ShacBaseType x);  /*                              */
c_bool ShacBaseType_uchar(ShacBaseType x);  /*                              */
c_bool ShacBaseType_ushort(ShacBaseType x); /*                              */
c_bool ShacBaseType_bool(ShacBaseType x);   /*                              */
c_bool ShacBaseType_char(ShacBaseType x);   /*                              */
c_bool ShacBaseType_short(ShacBaseType x);  /*                              */
c_bool ShacBaseType_void(ShacBaseType x);   /*                              */
c_bool ShacBaseType_float(ShacBaseType x);  /*                              */
c_bool ShacBaseType_long(ShacBaseType x);   /*                              */
c_bool ShacBaseType_bit16(ShacBaseType x);  /*                              */
c_bool ShacBaseType_object(ShacBaseType x); /*                              */
c_bool ShacBaseType_bit8(ShacBaseType x);   /*                              */
c_bool ShacBaseType_ulong(ShacBaseType x);  /*                              */

/* ------------------------------ StringType ------------------------------ */

c_bool ShacStringType_string(ShacStringType x);  /*                         */
c_bool ShacStringType_wstring(ShacStringType x); /*                         */
c_bool ShacStringType_byte(ShacStringType x);    /*                         */

/* ------------------------------- IndexRef ------------------------------- */

c_bool ShacIndexRef_cnat(ShacIndexRef x, GLS_Tok* x1);     /*               */
c_bool ShacIndexRef_var(ShacIndexRef x, ShacVarRef* x1);   /*               */
c_bool ShacIndexRef_func(ShacIndexRef x, ShacFuncRef* x1); /*               */
c_bool ShacIndexRef_chex(ShacIndexRef x, GLS_Tok* x1);     /*               */

/* ------------------------------- Argument ------------------------------- */

c_bool ShacArgument_var(ShacArgument x, ShacVarRef* x1);   /*               */
c_bool ShacArgument_cstring(ShacArgument x, GLS_Tok* x1);  /*               */
c_bool ShacArgument_chex(ShacArgument x, GLS_Tok* x1);     /*               */
c_bool ShacArgument_creal(ShacArgument x, GLS_Tok* x1);    /*               */
c_bool ShacArgument_cnat(ShacArgument x, GLS_Tok* x1);     /*               */
c_bool ShacArgument_func(ShacArgument x, ShacFuncRef* x1); /*               */

/* -------------------------------- State --------------------------------- */

c_bool ShacState_state(ShacState x, GLS_Tok* x1, ShacCondition* x2); /*     */

/* ------------------------------ Procedure ------------------------------- */

c_bool ShacProcedure_proc(ShacProcedure x, GLS_Tok* x1, ShacStatementBlock* x2);        /*  */

/* ------------------------------- Program -------------------------------- */

c_bool ShacProgram_prog(ShacProgram x, GLS_Tok* x1, GLS_Lst(ShacStep)* x2);   /*  */

/* ---------------------------- StartCondition ---------------------------- */

c_bool ShacStartCondition_cond(ShacStartCondition x, ShacCondition* x1, GLS_Tok* x2);             /*  */

/* ------------------------------ Statement ------------------------------- */

c_bool ShacStatement_while(ShacStatement x, ShacCondition* x1, ShacStatementBlock* x2);               /*  */
c_bool ShacStatement_proc(ShacStatement x, GLS_Tok* x1); /*                 */
c_bool ShacStatement_assg1(ShacStatement x, ShacVarRef* x1, ShacArgument* x2);      /*  */
c_bool ShacStatement_if(ShacStatement x, ShacCondition* x1, ShacStatementBlock* x2);            /*  */
c_bool ShacStatement_assg2(ShacStatement x, ShacVarRef* x1, GLS_Tok* x2); /*  */

c_bool ShacStatement_ifels(ShacStatement x, ShacCondition* x1, ShacStatementBlock* x2,
                           ShacStatementBlock* x3)
;

c_bool ShacStatement_ret(ShacStatement x);                   /*             */
c_bool ShacStatement_func(ShacStatement x, ShacFuncRef* x1); /*             */

/* ---------------------------- StatementBlock ---------------------------- */

c_bool ShacStatementBlock_stmts(ShacStatementBlock x, GLS_Lst(ShacStatement)* x1);          /*  */

/* ------------------------------ Condition ------------------------------- */

c_bool ShacCondition_atom(ShacCondition x, ShacAtomicCondition* x1); /*     */
c_bool ShacCondition_not(ShacCondition x, ShacCondition* x1);        /*     */
c_bool ShacCondition_name(ShacCondition x, GLS_Tok* x1);             /*     */
c_bool ShacCondition_and(ShacCondition x, ShacCondition* x1, ShacCondition* x2);        /*  */
c_bool ShacCondition_brack(ShacCondition x, ShacCondition* x1); /*          */
c_bool ShacCondition_or(ShacCondition x, ShacCondition* x1, ShacCondition* x2);       /*  */

/* --------------------------- AtomicCondition ---------------------------- */

c_bool ShacAtomicCondition_rel(ShacAtomicCondition x, ShacArgument* x1, ShacRelOp* x2,
                               ShacArgument* x3)
;


/* -------------------------------- RelOp --------------------------------- */

c_bool ShacRelOp_gt(ShacRelOp x);      /*                                   */
c_bool ShacRelOp_lt(ShacRelOp x);      /*                                   */
c_bool ShacRelOp_ne(ShacRelOp x);      /*                                   */
c_bool ShacRelOp_eq(ShacRelOp x);      /*                                   */
c_bool ShacRelOp_le(ShacRelOp x);      /*                                   */
c_bool ShacRelOp_ge(ShacRelOp x);      /*                                   */

/* --------------------------------- Step --------------------------------- */

c_bool ShacStep_step(ShacStep x, GLS_Tok* x1, ShacStepCommands* x2); /*     */

/* ----------------------------- StepCommands ----------------------------- */

c_bool ShacStepCommands_cmds(ShacStepCommands x, GLS_Lst(ShacParamAssignment)* x1, ShacInitial* x2,
                             ShacCyclic* x3, ShacFinal* x4,
                             ShacTerminate* x5, ShacNext* x6)
;


/* --------------------------- ParamAssignment ---------------------------- */

c_bool ShacParamAssignment_assnat(ShacParamAssignment x, GLS_Tok* x1, GLS_Tok* x2);           /*  */
c_bool ShacParamAssignment_assreal(ShacParamAssignment x, GLS_Tok* x1, GLS_Tok* x2);            /*  */
c_bool ShacParamAssignment_asshex(ShacParamAssignment x, GLS_Tok* x1, GLS_Tok* x2);           /*  */

/* ------------------------------- Initial -------------------------------- */

c_bool ShacInitial_init(ShacInitial x, GLS_Tok* x1); /*                     */
c_bool ShacInitial_non(ShacInitial x);               /*                     */

/* -------------------------------- Cyclic -------------------------------- */

c_bool ShacCyclic_cyclic(ShacCyclic x, GLS_Tok* x1); /*                     */
c_bool ShacCyclic_non(ShacCyclic x);                 /*                     */

/* -------------------------------- Final --------------------------------- */

c_bool ShacFinal_final(ShacFinal x, GLS_Tok* x1); /*                        */
c_bool ShacFinal_non(ShacFinal x);                /*                        */

/* ------------------------------ Terminate ------------------------------- */

c_bool ShacTerminate_term(ShacTerminate x, ShacCondition* x1); /*           */
c_bool ShacTerminate_non(ShacTerminate x);                     /*           */

/* --------------------------------- Next --------------------------------- */

c_bool ShacNext_non(ShacNext x);                  /*                        */
c_bool ShacNext_auto(ShacNext x);                 /*                        */
c_bool ShacNext_manual(ShacNext x);               /*                        */
c_bool ShacNext_program(ShacNext x, GLS_Tok* x1); /*                        */


#ifdef __cplusplus
}
#endif

#endif
