/*.SH.*/

/*
 *  Headerfile for module edb_row
 *
 *  Generated by C-Head Version 1.3
 *  (c) 1993 by 2i Industrial Informatics GmbH
 *
 *  This file has been extracted from the source file
 *  edb_row.cpp on Wednesday March 20 2002  22:46:37
 */

#ifndef __edb_row__
#define __edb_row__


// Headerfiles
// ===========================================================================

#include "store/es_row.hpp"
#include "dbi/edb_query.hpp"


// ===========================================================================
// Definition cdbRow
// ---------------------------------------------------------------------------
//
// cBase
//  +--csBaseStorage
//      +--csRow
//         +--cdbRow
//
// ===========================================================================

class __ECL_DLLEXPORT__ cdbRow : public csRow, public cdbTAObject {
   ECL_DECLARE(cdbRow,csRow)
   friend class cdbField;

public:
   // Aktuellen Datensatz aus Query uebernehmen oder neuen Datensatz anlegen
   cdbRow(cdbQuery *query, int flags = 0);
   // Ueber cString-'key' definierten Datensatz aus Query erzeugen
   cdbRow(cdbQuery *query, cString key, int flags = 0);
   // Copy-Konstruktor
   cdbRow(const cdbRow& other);
   // Destruktor
   ~cdbRow();


   // Flags
   // =====

   enum FLAGS { fStart = csBaseStorage::fUser,
      fUser        = fStart << 2   // Benutzerdefinierte Flags
   };


   // Hilfsfunktionen
   // ===============

   // WHERE-Bedingung aus Schluesselnamen und -werten basteln
   static SQL::WHERE makeCondExact(SQL::FIELDS key_fields, SQL::FIELDS key_values, csQuery *query = 0);


protected:

   // Ueberschriebene Events
   // ======================

   // Wird aufgerufen, um die Felder des Datensatzes (erneut) einzulesen
   bool onFetch();
   // Wird aufgerufen, um das Einfuegen zu starten (-> false, falls nicht moeglich)
   bool onAdd();
   // Wird aufgerufen, um die Bearbeitung zu starten (-> false, falls nicht moeglich)
   bool onEdit();
   // Wird aufgerufen, um den Datensatz zu loeschen (-> false, falls nicht moeglich)
   bool onRemove();
   // Wird aufgerufen, um die Aenderungen zu speichern (-> false, falls nicht moeglich)
   bool onSave(INFO commit_info);
   // Wird aufgerufen, um die Aenderungen zu verwerfen (-> false, falls nicht moeglich)
   bool onCancel(INFO rollback_info);

   // Wird aufgerufen, um den Beginn einer Transaktion zu markieren
   bool onBeginTA();
   // Wird aufgerufen, um die letzte (alle) Transaktion(en) zu speichern
   bool onCommitTA(bool commit_all);
   // wird aufgerufen, um die Transaktion zu verwerfen
   bool onRollbackTA();


   // Ausfuehrung (aus cdbTAObject)
   // -----------------------------

   // Wird aufgerufen, um die Aktion 'func' auszufuehren
   void onExecAction(cdbDatabase *db, int func);
   // Wird aufgerufen, um den Abbruch der aktuellen Aktion anzufordern
   void onStopAction();
   // Wird aufgerufen, um eine textuelle Signatur der Aktion zu ermitteln
   cString onGetSignature();


private:

   cdbCursorEx *cu_fetch;     // Zeiger auf Fetch-Cursor (oder 0)
   cdbCursor *cu_edit;        // Zeiger auf Edit-Cursor (oder 0)

   SQL::FIELDS key_fields;    // Namen der Schluesselfelder
   SQL::FIELDS fields;        // Namen aller Felder
   SQL::SELECT select;        // SQL-SELECT-String

   cErrBase last_error;       // Zuletzt aufgetretener Fehler
   bool last_rc;              // Ergebnis der letzten DB-Operation

   // Intern: Feld hinzufuegen (fuer cdbField-Konstruktor)
   void addField(cdbField *field);

   // Ausfuehren der Aktionen bei onFetch()
   void execFetch(cdbDatabase *db);
   // Ausfuehren der Aktionen bei onAdd()
   void execAddRow(cdbDatabase *db);
   // Ausfuehren der Aktionen bei onEdit()
   void execEdit(cdbDatabase *db);
   // Ausfuehren der Aktionen bei onSave(INSERT)
   void execInsert(cdbDatabase *db);
   // Ausfuehren der Aktionen bei onSave(UPDATE)
   void execUpdate(cdbDatabase *db);
   // Ausfuehren der Aktionen bei onSave(DELETE)
   void execDelete(cdbDatabase *db);

   // Wird aufgerufen, wenn ta->end() beendet ist
   void onEvtEndTA(void *error);

};


#endif

/*.EH.*/
