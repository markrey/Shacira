/*.SH.*/

/*
 *  Headerfile for module ew_nbctls
 *
 *  Generated by C-Head Version 1.3
 *  (c) 1993 by 2i Industrial Informatics GmbH
 *
 *  This file has been extracted from the source file
 *  ew_nbctls.cpp on Thursday February 28 2002  22:14:18
 */

#ifndef __ew_nbctls__
#define __ew_nbctls__


// Headerfiles
// ===========================================================================

#include "win/ew_controls.hpp"


// ===========================================================================
// Definition cwNotebookCtl
// ---------------------------------------------------------------------------
//
// cBase
//  +--cwWindow
//      +--cwControl
//          +--cwNotebookCtl
//
// ===========================================================================

class __ECL_DLLEXPORT__ cwNotebookCtl : public cwControl {
   ELO_DECLARE(cwNotebookCtl,cwControl)
   friend class ccwNotebookCtl;

public:

   // Konstruktor
   inline cwNotebookCtl() : cwControl(0) { init(); }
   // Destruktor
   virtual ~cwNotebookCtl();


   // window-Flags
   // ============

   enum FLAGS { wflStart = cwControl::wflUser,
      wflAutoDeletePages   = wflStart << 0,  // Eingefuegte Seiten loeschen
      wflUser              = wflStart << 1   // Benutzerdefinierte Flags
   };


   // window-Styles
   // =============

   // Styles
   enum STYLES { wsStart = cwControl::wsUser,
      wsSingleLine      = wsStart << 0,   // Tabs einzeilig, evtl. mit Scroller
      wsMultiLine       = wsStart << 1,   // Tabs bei Bedarf mehrzeilig
      wsUser            = wsStart << 2    // Benutzerdefinierte Styles
   };


   // Events
   // ======

   // Event-IDs dieser Klasse
   enum EVENTS { evtFirst = cwControl::evtUser,
      evtPageAdded,           // (EVFUNC_PI) Seite wurde eingefuegt
      evtPageRemoved,         // (EVFUNC_PI) Seite wird entfernt
      evtPageChanging,        // (EVFUNC_I)  Seite wird gewechselt
      evtPageChanged,         // (EVFUNC_II) Seite wurde gewechselt
      evtUser                 // Ab hier benutzerdefinierte Events
   };


   // Allgemeines
   // ===========

   // Erzeugen des Controls
   void create(cwWindow *parent, int id, int style = 0, const cdRect& rect = cdRect());
   // Liste zugeordneter Icons initialisieren
   void setIconList(const cwIconList& ilist);

   // Seite einfuegen, Titel-Text ueber Resource (liefert Index zurueck)
   int addPage(cwWindow *page, cResource title, int bmp_idx = 0, int before_idx = -1);
   // Seite einfuegen, Titel-Text als cString (liefert Index zurueck)
   int addPage(cwWindow *page, cString title, int bmp_idx = 0, int before_idx = -1);
   // Seite entfernen (ueber Seiten-Index)
   void removePage(int page_idx);
   // Seite anzeigen
   void gotoPage(int page_idx);

   // Index der aktuellen Seite ermitteln
   int getCurrentPage() const;
   // Liefert den Index der Notebook-Seite 'page' (oder 0)
   int findPage(cwWindow *page) const;
   // Liefert das zur Seite 'page_idx' gehoerende Fenster
   cwWindow *getPage(int page_idx) const;
   // Liefert die Anzahl eingefuegter Seiten
   int getPageCount() const;


protected:

   // Zusaetzliche Events
   // ===================

   // Wird aufgerufen, nachdem eine Seite eingefuegt wurde
   virtual void onPageAdded(int page_idx, cwWindow *page);
   // Wird aufgerufen, befor eine Seite entfernt wird
   virtual void onPageRemoved(int page_idx, cwWindow *page);

   // Wird aufgerufen, um den Wechsel der aktuellen Seite anzukuendigen (true = prevent)
   virtual bool onPageChanging(int cur_page_idx);
   // Wird aufgerufen, um den Wechsel der aktuellen Seite bekanntzugeben
   virtual void onPageChanged(int prev_page_idx, int new_page_idx);


   // Ueberschriebene Events
   // ======================

   // Groesse geaendert
   void onSize(int cx, int cy);
   // Inhalt refreshen (false -> Abbruch)
   bool onRefresh();
   // Befehl ausfuehren (von Menu, Control oder Accelerator)
   // rc: true -> Meldung bearbeitet; false -> Default ausfuehren
   bool onCommand(const cwCmdEvt& cmd);
   // Update Benutzerschnittstelle
   // rc: true -> Meldung bearbeitet; false -> Default ausfuehren
   bool onCommandUI(cwCmdUI& cmd);
   // Wird aufgerufen, um die durch 'mask' spezifizierten Window-Styles zu ermitteln
   int onGetStyles(int mask) const;
   // Wird aufgerufen, um Window-Styles zu setzen (add) und zu entfernen (remove)
   void onModifyStyles(int add, int remove, int os_add[], int os_remove[]);


protected:

   // Interner Konstruktor
   cwNotebookCtl(void *wnd);


private:

   // Initialisierung
   void init();

   // Zusaetzliche Informationen
   struct ADD_INFO;
   ADD_INFO *info;

   // Intern: Wird aufgerufen, um den Seitenwechsel anzukuendigen
   bool onPageChanging();
   // Intern: Wird aufgerufen, um den Seitenwechsel bekanntzugeben
   void onPageChanged();

};


#endif

/*.EH.*/
