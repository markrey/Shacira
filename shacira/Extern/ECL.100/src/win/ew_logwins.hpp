/*.SH.*/

/*
 *  Headerfile for module ew_logwins
 *
 *  Generated by C-Head Version 1.3
 *  (c) 1993 by 2i Industrial Informatics GmbH
 *
 *  This file has been extracted from the source file
 *  ew_logwins.cpp on Thursday March 28 2002  14:59:07
 */

#ifndef __ew_logwins__
#define __ew_logwins__


// Headerfiles
// ===========================================================================

#include "base/eb_time.hpp"
#include "win/ew_windows.hpp"


// ===========================================================================
// Definition cwLogWin
// ---------------------------------------------------------------------------
//
// cBase
//  +--cwWindow
//      +--cwLogWin
//
// ===========================================================================

class __ECL_DLLEXPORT__ cwLogWin : public cwWindow {
   ELO_DECLARE(cwLogWin,cwWindow)

public:

   // Konstruktor
   inline cwLogWin() : cwWindow(0) { init(); }
   // Destruktor
   virtual ~cwLogWin();


   // window-Styles
   // =============

   // Styles
   enum STYLES { wsStart = cwWindow::wsUser,
      wsHasDate         = wsStart << 0,   // Datumsfeld wird angezeigt
      wsHasTime         = wsStart << 1,   // Zeitfeld wird angezeigt
      wsUser            = wsStart << 2,   // Benutzerdefinierte Styles
      //
      // Kombinationen:
      wsHasTimestamp    = wsHasDate|wsHasTime      // Datums- und Zeitfeld
   };


   // Allgemeines
   // ===========

   // Erzeugen des Dialogs
   void create(cwWindow *parent, int id,
               int style = wsChild | wsVisible,
               const cdRect& rect = cdRect());

   // Protokoll loeschen
   void clear();
   // Zeile Hinzufuegen
   void addLine(const cString& text, const cDateTime& tstamp = cDateTime());


protected:

   // Ueberschriebene Events
   // ======================

   // Wird aufgerufen, um die durch 'mask' spezifizierten Window-Styles zu ermitteln
   int onGetStyles(int mask) const;
   // Wird aufgerufen, um die OS-spezifischen Styles aus den ECL-Styles zu ermitteln
   void onMakeStyles(int styles, int os_styles[]) const;
   // Wird aufgerufen, um Window-Styles zu setzen (add) und zu entfernen (remove)
   void onModifyStyles(int add, int remove, int os_add[], int os_remove[]);

   // Wird aufgerufen, wenn sich der Presentation-Parameter 'pp' geaendert hat
   void onPresParamChanged(PPARAMS pp);
   // Wird aufgerufen, wenn der Presentation-Parameter 'pp' entfernt wurde
   void onPresParamRemoved(PPARAMS pp);


protected:

   // Interner Konstruktor
   cwLogWin(void *wnd);


private:

   // Styles
   int own_styles;

   // Initialisierung
   void init();

};


#endif

/*.EH.*/
