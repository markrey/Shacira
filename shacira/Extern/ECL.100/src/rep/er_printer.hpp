/*.SH.*/

/*
 *  Headerfile for module er_printer
 *
 *  Generated by C-Head Version 1.3
 *  (c) 1993 by 2i Industrial Informatics GmbH
 *
 *  This file has been extracted from the source file
 *  er_printer.cpp on Tuesday August 21 2001  18:04:42
 */

#ifndef __er_printer__
#define __er_printer__


// Headerfiles
// ===========================================================================

#include "base/eb_prof.hpp"
#include "rep/er_prnform.hpp"

class cwWindow;


// ===========================================================================
// Definition crPrinter
// ---------------------------------------------------------------------------
//
// cBase
//  +--crPrinter
//
// ===========================================================================

class __ECL_DLLEXPORT__ crPrinter : public cBase {
   friend class cPrintDoc;

public:

   // Konstruktor
   crPrinter();
   // Destruktor
   ~crPrinter();


   // Formulardaten erfragen
   // ======================

   // Ausgewaehltes Formular erfragen
   crPrnForm getCurrentForm() const;

   // Ermittelt die Papiergroesse in mm
   void getPaperSize(double& width, double& height);
   // Ermittelt die Groesse des bedruckbaren Bereichs in mm
   void getPrintableSize(double& width, double& height);
   // Ermittelt die druckerspezifischen Randeinstellungen
   void getMargins(double& left, double& right, double& top, double& bottom);


   // Zuordnungen
   // ===========

   // Queue zuordnen
   void setAssociatedQueue(crPrnQueue queue);
   // Zugeordnete Queue erfragen
   crPrnQueue getAssociatedQueue() const;


   // Einstellungen verwalten
   // =======================

   enum SHOW {
      showNever,           // Dialog nicht anzeigen, evtl. Defaultwerte waehlen
      showNeverAndFail,    // Dialog nicht anzeigen, evtl. mit false zurueck
      showIfNecessary,     // Dialog anzeigen, wenn noch keine Auswahl
      showAlways           // Dialog immer anzeigen
   };

   // Aktuelle Druckereinstellungen aus Profile laden bzw. ueber Auswahldialog
   bool load(cProfile *prf, cString app, cString key, cwWindow *parent = 0, SHOW show_dlg = showNever);
   // Sichern der aktuellen Druckereinstellungen im Profile
   void save(cProfile *prf, cString app, cString key);


private:

   crPrnSpooler spooler;   // Verwaltungsinstanz fuer Queue-Objekte
   crPrnQueue cur_queue;   // Aktueller Drucker(-warteschlange)
   crPrnForm cur_form;     // Aktuelles Formular

   // Intern: Liest Einstelldaten aus Profile
   crPrnDriver readFromProfile(cProfile *prf, cString app, cString key, cString& queue_name) const;
   // Intern: Schreibt Einstelldaten in Profile
   void writeToProfile(cProfile *prf, cString app, cString key) const;
   // Intern: Druckerauswahl
   bool requestPrinter(cwWindow *parent);

};


#endif

/*.EH.*/
