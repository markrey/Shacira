/*.SH.*/

/*
 *  Headerfile for module eb_except
 *
 *  Generated by C-Head Version 1.3
 *  (c) 1993 by 2i Industrial Informatics GmbH
 *
 *  This file has been extracted from the source file
 *  eb_except.cpp on Thursday February 15 2001  18:32:22
 */

#ifndef __eb_except__
#define __eb_except__


// Headerfiles
// ===========================================================================

#include "base/eb_base.hpp"


// ===========================================================================
// cExceptionHandler
// ---------------------------------------------------------------------------
//
// cBase
//  +--cExceptionHandler
//
// ===========================================================================

class cThread;

class __ECL_DLLEXPORT__ cExceptionHandler : public cBase {
   friend class cThread;

public:
   cExceptionHandler(cThread *thread_to_register);
   ~cExceptionHandler();

   void raiseAsyncTerminate();

private:
   cThread *thread;
   void *registration_record;
   static void deregisterAllHandlersFor(cThread *thread_to_deregister);

};


// ===========================================================================
// cException
// ---------------------------------------------------------------------------
//
// cBase
//  +--cException
//
// ===========================================================================

class __ECL_DLLEXPORT__ cException : public cBase {

public:
   enum EXCEPTION {
      xUndefined,
      xGuardPageViolation,
      xUnableToGrowStack,
      xDatatypeMisalignment,
      xBreakpoint,
      xSingleStep,
      xAccessViolation,
      xIllegalInstruction,
      xFloatDenormalOperand,
      xFloatDivideByZero,
      xFloatInexactResult,
      xFloatInvalidOperation,
      xFloatOverflow,
      xFloatStackCheck,
      xFloatUnderflow,
      xIntegerDivideByZero,
      xIntegerOverflow,
      xPriviledgedInstruction,
      xInPageError,
      xProcessTerminate,
      xAsyncProcessTerminate,
      xNoncontinuableException,
      xInvalidDisposition,
      xUnwind,
      xBadStack,
      xInvalidUnwindTarget,
      xSignal
   };

   virtual EXCEPTION getId() const = 0;

};


#endif

/*.EH.*/
