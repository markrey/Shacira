<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"         "http://www.w3.org/TR/REC-html40/Transitional.dtd">
<html>
<head>
<title>[symbols.h] Type: Symbol</title>
<meta name="robots" content="noindex">
</head>
<body bgcolor=white>
<h1><font color="#008B8B">[symbols.h] Type: Symbol</font></h1>
<h2><font color="#008B8B"><a href="styx.html">contents</a></font></h2><br>
<br><a href="standard.htm">#include "standard.h"</a>
<br>
<br>
<br>
<br><pre>
    This module implements the symbol type for a unique representation of strings
    and the symbol table in which they are stored. One intention is the reduction
    of place- and time-complexity when dealing with many identical strings.

    Specification
    1) forall String s : strcmp(s,symbolToString(stringToSymbol(s))) == 0.
    2) forall Symbol s : equalSymbols(s,stringToSymbol(symbolToString(s)).
    3) equalSymbols is an equality.

</pre>
<br><hr width="100%" size=2><h2><b> The Type </b></h2>
<br>
<table border=0 cellspacing=10>
<TR valign=top>
<td align=left><b> symbol </b>
<td align=left> Abstract symbol type 

</table>
<br><hr width="100%" size=2><h2><b> Init & Quit </b></h2>
<table border=0 cellspacing=20>
<tr valign=top>
<td bgcolor="#FFF8DC" align=left><pre>void <b>initSymbols</b>(void)</pre>
<td bgcolor="#FFF0F5" align=left>initializes the symbol table
<tr valign=top>
<td bgcolor="#FFF8DC" align=left><pre>void <b>freeSymbols</b>(void)</pre>
<td bgcolor="#FFF0F5" align=left>releases the symbol table

</table>
<br><hr width="100%" size=2><h2><b> Conversion </b></h2>
<table border=0 cellspacing=20>
<tr valign=top>
<td bgcolor="#FFF8DC" align=left><pre>symbol <b>stringToSymbol</b>(c_string str)</pre>
<td bgcolor="#FFF0F5" align=left>converts string 'str' into a symbol
<tr valign=top>
<td bgcolor="#FFF8DC" align=left><pre>symbol <b>lstringToSymbol</b>(c_string str)</pre>
<td bgcolor="#FFF0F5" align=left> converts ( lower case ) string 'str' into a symbol <br>
<tr valign=top>
<td bgcolor="#FFF8DC" align=left><pre>symbol <b>ustringToSymbol</b>(c_string str)</pre>
<td bgcolor="#FFF0F5" align=left> converts ( upper case ) string 'str' into a symbol <br>
<tr valign=top>
<td bgcolor="#FFF8DC" align=left><pre>c_string <b>symbolToString</b>(symbol sym)</pre>
<td bgcolor="#FFF0F5" align=left> string corresponding to symbol 'sym' <br>
<tr valign=top>
<td bgcolor="#FFF8DC" align=left><pre>symbol <b>bstringToSymbol</b>(c_bstring bstr)</pre>
<td bgcolor="#FFF0F5" align=left> converts binary string 'bstr' into a symbol <br>
<tr valign=top>
<td bgcolor="#FFF8DC" align=left><pre>c_bstring <b>symbolToBString</b>(symbol sym)</pre>
<td bgcolor="#FFF0F5" align=left> binary string corresponding to symbol 'sym' <br>

</table>
<br><hr width="100%" size=2><h2><b> Predicates </b></h2>
<table border=0 cellspacing=20>
<tr valign=top>
<td bgcolor="#FFF8DC" align=left><pre>c_bool <b>equalSymbols</b>(symbol a, symbol b)</pre>
<td bgcolor="#FFF0F5" align=left> whether two symbols 'a' and 'b' are equal <br>
<tr valign=top>
<td bgcolor="#FFF8DC" align=left><pre>c_bool <b>binarySymbol</b>(symbol s)</pre>
<td bgcolor="#FFF0F5" align=left> whether symbol 's' represents a binary string <br>

</table>
<br><hr width="100%" size=2><h2><b> Debugging </b></h2>
<table border=0 cellspacing=20>
<tr valign=top>
<td bgcolor="#FFF8DC" align=left><pre>void <b>printSymbols</b>(int indent)</pre>
<td bgcolor="#FFF0F5" align=left>prints the symbol table to stdout
<tr valign=top>
<td bgcolor="#FFF8DC" align=left><pre>long <b>countSymbols</b>(void)</pre>
<td bgcolor="#FFF0F5" align=left>number of symbols in the symbol table

</table>

</body>
</html>
